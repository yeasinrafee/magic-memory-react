{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","id","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","sort","Math","random","map","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAW,GAA4C,IAA1CC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAQhE,OACE,qBAAKC,UAAU,OAAM,SACnB,sBAAKA,UAAWF,EAAS,UAAW,GAAG,UACrC,qBACAE,UAAU,QACVC,IAAKL,EAAKK,IACVC,IAAI,eAEJ,qBACAF,UAAU,OACVC,IAAI,iBACJC,IAAI,aACJC,QAlBgB,WACdJ,GACFF,EAAaD,UAKUA,EAAKQ,ICPpC,IAAMC,EAAa,CACjB,CAAE,IAAO,oBAAqBC,SAAS,GACvC,CAAE,IAAO,oBAAqBA,SAAS,GACvC,CAAE,IAAO,kBAAmBA,SAAS,GACrC,CAAE,IAAO,oBAAqBA,SAAS,GACvC,CAAE,IAAO,oBAAqBA,SAAS,GACvC,CAAE,IAAO,mBAAoBA,SAAS,IA+EzBC,MA5Ef,WACE,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA0BF,mBAAS,GAAE,mBAA9BG,EAAK,KAAEC,EAAQ,KACtB,EAAkCJ,mBAAS,MAAK,mBAAzCK,EAAS,KAAEC,EAAY,KAC9B,EAAkCN,mBAAS,MAAK,mBAAzCO,EAAS,KAAEC,EAAY,KAC9B,EAAgCR,oBAAS,GAAM,mBAAxCT,EAAQ,KAAEkB,EAAW,KAGtBC,EAAe,WACnB,IAAMA,EAAe,UAAIb,EAAeA,GAAYc,MAAM,kBAAMC,KAAKC,SAAW,MAAKC,KAAI,SAAC1B,GAAI,kCAAUA,GAAI,IAAEQ,GAAIgB,KAAKC,cAEvHP,EAAa,MACbE,EAAa,MACbN,EAASQ,GACTN,EAAS,IAILf,EAAe,SAACD,GACpBiB,EAAWG,EAAapB,GAAQkB,EAAalB,IAI/C2B,qBAAU,WACLV,GAAaE,IACdE,GAAY,GAETJ,EAAUZ,MAAQc,EAAUd,KAC7BS,GAAS,SAAAc,GACP,OAAOA,EAAUF,KAAI,SAAA1B,GACnB,OAAGA,EAAKK,MAAQY,EAAUZ,IACjB,2BAAIL,GAAI,IAAEU,SAAS,IAEnBV,QAIb6B,KAEAC,YAAW,kBAAMD,MAAa,SAKpCF,qBAAU,WACRL,MACA,IAGF,IAAMO,EAAY,WAChBX,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAe,GAAS,OAAIA,EAAY,KAClCV,GAAY,IAGd,OACE,sBAAKjB,UAAU,MAAK,UAClB,6CACA,wBAAQG,QAASe,EAAa,sBAE9B,qBAAKlB,UAAU,YAAW,SACvBS,EAAMa,KAAI,SAAC1B,GAAI,OACd,cAAC,EAAU,CACXA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASiB,GAAajB,IAASmB,GAAanB,EAAKU,QAC1DP,SAAUA,GAJOH,EAAKQ,SAQ1B,wCAAWO,SC/EjBiB,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,W","file":"static/js/main.6321111c.chunk.js","sourcesContent":["import './SingleCard.css';\r\n\r\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\r\n\r\n    const handleClick = ()=>{\r\n      if(!disabled){\r\n        handleChoice(card);\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div className=\"card\" key={card.id}>\r\n      <div className={flipped? \"flipped\": \"\"}>\r\n        <img \r\n        className=\"front\" \r\n        src={card.src} \r\n        alt=\"card front\"\r\n        />\r\n        <img \r\n        className=\"back\" \r\n        src=\"/img/cover.png\" \r\n        alt=\"cover card\" \r\n        onClick={handleClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\nimport './App.css'\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  { \"src\": \"/img/helmet-1.png\", matched: false },\n  { \"src\": \"/img/potion-1.png\", matched: false },\n  { \"src\": \"/img/ring-1.png\", matched: false },\n  { \"src\": \"/img/scroll-1.png\", matched: false },\n  { \"src\": \"/img/shield-1.png\", matched: false },\n  { \"src\": \"/img/sword-1.png\", matched: false },\n]\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // shuffle cards\n  const shuffleCards = () =>{\n    const shuffleCards = [...cardImages, ...cardImages].sort( () => Math.random() - 0.5).map((card) => ({...card, id: Math.random()}));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffleCards);\n    setTurns(0);\n  }\n\n  // handle choice\n  const handleChoice = (card) =>{\n    choiceOne? setChoiceTwo(card) : setChoiceOne(card);\n  }\n\n  //Check Choice match:\n  useEffect(() =>{\n    if(choiceOne && choiceTwo){\n      setDisabled(true);\n\n      if(choiceOne.src === choiceTwo.src){\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if(card.src === choiceOne.src){\n              return {...card, matched: true}\n            }else{\n              return card;\n            }\n          })\n        })\n        resetTurn();\n      }else{\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  })\n\n  useEffect(() =>{\n    shuffleCards();\n  },[])\n\n\n  const resetTurn = ()=>{\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard key={card.id} \n          card={card}\n          handleChoice={handleChoice} \n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}